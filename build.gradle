group 'com.dempseywood.datamanagement'
version '1.0-SNAPSHOT'
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
        classpath "gradle.plugin.at.comm_unity.gradle.plugins:jpamodelgen-plugin:1.1.4"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'at.comm_unity.gradle.plugins.jpamodelgen'
apply plugin: 'org.asciidoctor.convert'

bootRun {
    addResources = true
    systemProperties System.properties
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext['hibernate.version'] = '5.2.3.Final'
repositories {
    mavenCentral()

}


jpaModelgen{
    jpaModelgenSourcesDir = 'src/generated/java'
}

compileJpaModelgen {
    includes += ['**/entities/*.java', '**/entity/*.java',  '**/model/*.java']
}

sourceSets.main.java.srcDir new File(buildDir, 'generated/java')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/java')
    }
}
compileJava.options.compilerArgs += ["-proc:none"]
dependencies {


    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        //exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-devtools")
    //compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    //Jackson support for java 8
    compile("com.fasterxml.jackson.module:jackson-module-parameter-names")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    
    //security
    compile("org.springframework.boot:spring-boot-starter-security")

    //email
    compile("org.springframework.boot:spring-boot-starter-mail")

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile group: 'org.apache.poi', name: 'poi', version: '3.9'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'

    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
// https://mvnrepository.com/artifact/org.webjars/bootstrap
    compile group: 'org.webjars', name: 'bootstrap', version: '3.3.7'
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile 'com.google.apis:google-api-services-sheets:v4-rev491-1.23.0'



    //compile 'com.google.maps.android:android-maps-utils:0.5+'



    testCompile("junit:junit")
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'

    testCompile group:'org.springframework.restdocs', name: 'spring-restdocs-mockmvc'
    testCompile group:'org.springframework.restdocs', name: 'spring-restdocs-core'



}


